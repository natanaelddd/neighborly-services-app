
import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";

interface IconSelectorProps {
  selectedIcon: string;
  onIconSelect: (icon: string) => void;
}

const IconSelector = ({ selectedIcon, onIconSelect }: IconSelectorProps) => {
  const [customIcon, setCustomIcon] = useState("");

  const serviceIcons = [
    "üßπ", "üîß", "üå±", "üë∂", "üçΩÔ∏è", "üöó", "üíª", "üìö", 
    "üè•", "üì¶", "üé®", "üéµ", "üíÑ", "üèÉ", "üßò", "üêï"
  ];

  const homeIcons = [
    "üè†", "üî®", "üõ†Ô∏è", "üîå", "üöø", "üßΩ", "ü™ü", "ü™¥",
    "üîß", "‚öôÔ∏è", "üß∞", "üõ°Ô∏è", "üîê", "üí°", "üö™", "ü™ë"
  ];

  const professionalIcons = [
    "üë©‚Äç‚öïÔ∏è", "üë®‚Äçüíº", "üë©‚Äçüç≥", "üë®‚Äçüî¨", "üë©‚Äçüíª", "üë®‚Äçüé®", "üë©‚Äçüè´", "üë®‚Äç‚öñÔ∏è",
    "üë©‚Äç‚úàÔ∏è", "üë®‚Äçüîß", "üë©‚Äçüåæ", "üë®‚Äçüç≥", "üë©‚Äçüíº", "üë®‚Äç‚öïÔ∏è", "üë©‚Äçüîß", "üë®‚Äçüéì"
  ];

  const recreationIcons = [
    "üéØ", "üì∏", "üé™", "üé≠", "üé®", "üé≤", "üéÆ", "üé∏",
    "üèä", "üö¥", "‚öΩ", "üèÄ", "üéæ", "üèì", "üé≥", "üé™"
  ];

  const businessIcons = [
    "üíº", "üìä", "üí∞", "üìà", "üè™", "üõí", "üí≥", "üè¶",
    "üì±", "üíª", "üñ•Ô∏è", "‚å®Ô∏è", "üñ®Ô∏è", "üì†", "üìû", "üìß"
  ];

  const transportIcons = [
    "üöó", "üöô", "üöï", "üöå", "üöé", "üèéÔ∏è", "üöì", "üöë",
    "üöí", "üöê", "üõª", "üöö", "üöõ", "üöú", "üèçÔ∏è", "üõµ"
  ];

  const handleCustomIconSubmit = () => {
    if (customIcon.trim()) {
      onIconSelect(customIcon.trim());
      setCustomIcon("");
    }
  };

  const IconGrid = ({ icons }: { icons: string[] }) => (
    <div className="grid grid-cols-8 gap-2">
      {icons.map((icon, index) => (
        <Button
          key={index}
          variant={selectedIcon === icon ? "default" : "outline"}
          size="sm"
          className="h-10 w-10 p-0 text-lg hover:scale-110 transition-transform"
          onClick={() => onIconSelect(icon)}
        >
          {icon}
        </Button>
      ))}
    </div>
  );

  return (
    <Card>
      <CardHeader>
        <CardTitle className="text-sm">Selecionar √çcone</CardTitle>
      </CardHeader>
      <CardContent className="space-y-4">
        <Tabs defaultValue="services" className="w-full">
          <TabsList className="grid w-full grid-cols-3 text-xs">
            <TabsTrigger value="services">Servi√ßos</TabsTrigger>
            <TabsTrigger value="home">Casa</TabsTrigger>
            <TabsTrigger value="business">Neg√≥cios</TabsTrigger>
          </TabsList>
          
          <TabsContent value="services" className="space-y-4">
            <div>
              <Label className="text-xs">Servi√ßos Gerais:</Label>
              <div className="mt-2">
                <IconGrid icons={serviceIcons} />
              </div>
            </div>
            
            <div>
              <Label className="text-xs">Profissionais:</Label>
              <div className="mt-2">
                <IconGrid icons={professionalIcons} />
              </div>
            </div>
          </TabsContent>
          
          <TabsContent value="home" className="space-y-4">
            <div>
              <Label className="text-xs">Casa e Manuten√ß√£o:</Label>
              <div className="mt-2">
                <IconGrid icons={homeIcons} />
              </div>
            </div>
            
            <div>
              <Label className="text-xs">Lazer e Recrea√ß√£o:</Label>
              <div className="mt-2">
                <IconGrid icons={recreationIcons} />
              </div>
            </div>
          </TabsContent>
          
          <TabsContent value="business" className="space-y-4">
            <div>
              <Label className="text-xs">Neg√≥cios:</Label>
              <div className="mt-2">
                <IconGrid icons={businessIcons} />
              </div>
            </div>
            
            <div>
              <Label className="text-xs">Transporte:</Label>
              <div className="mt-2">
                <IconGrid icons={transportIcons} />
              </div>
            </div>
          </TabsContent>
        </Tabs>

        {/* √çcone personalizado */}
        <div>
          <Label htmlFor="custom-icon" className="text-xs">Ou digite um emoji personalizado:</Label>
          <div className="flex gap-2 mt-1">
            <Input
              id="custom-icon"
              value={customIcon}
              onChange={(e) => setCustomIcon(e.target.value)}
              placeholder="Ex: üéØ"
              className="h-8"
            />
            <Button 
              size="sm" 
              onClick={handleCustomIconSubmit}
              className="h-8"
            >
              Usar
            </Button>
          </div>
        </div>

        {/* √çcone selecionado */}
        {selectedIcon && (
          <div className="text-center p-3 bg-muted rounded border-2 border-primary/20">
            <span className="text-3xl">{selectedIcon}</span>
            <p className="text-xs text-muted-foreground mt-1">√çcone selecionado</p>
          </div>
        )}
      </CardContent>
    </Card>
  );
};

export default IconSelector;
